#!/usr/bin/python

"""muse - Muse Audio File Manager

Usage: muse -b|--backup [-fn] [-a album][-g artist-or-group] [-t title] [[<music>] <backup>]
       muse -c|--cmp [-q] [[<music>] <backup>]
       muse -d|--display [-efimnqv] [-a album] [-g artist-or-group] [-l library] [-t title] [<music>]
       muse -h|--help
       muse -r|--restore [-l library] [-q] [<backup> [<music>]]
       muse -s|--sync [-f|-n][-l library] [-q] [<music>]
       muse --version

Options:
    -b --backup           Back music up
    -a --album album      Name of the album
    -c --cmp              Compare two files or libraries
    -d --display          Display the contents of a music libary
    -e --fail-on-warning  Treat warnings like errors
    -f --fix              Fix file naming
    -i --ignore-errors    Ignore errors (treat them like warnings)
    -g --group group      Name of the artist or group
    -h --help             Show this screen
    -l --library library  Location of music library if not ~/Music
    -m --metadata         Include the ID3 frames in a file or library display
    -n --noaction         Just tells you what a command would do without taking any action
    -q --quiet            Suppress warnings
    -r --restore          Restore music from a backup
    -s --sync             Syncronize a the metadata with the filenames
    -t --title title      Title of song
    -v --verbose          Display actions taken
       --version          Show the version
"""

import filecmp
import os
import sys

sys.path.append(os.path.join(os.path.dirname(os.path.abspath(sys.argv[0])), "lib"))
from docopt       import docopt
from muse.Factory import createAudioFile
from muse.Library import Library
from muse.Mp3File import Mp3FileError
from muse.Options import options

arguments = docopt(__doc__, version='1.0')
library   = arguments['--library'] if arguments['--library'] else os.path.join(os.path.expanduser("~"), "Music")
music     = arguments['<music>']   if arguments['<music>']   else "."
backup    = arguments['<backup>']  if arguments['<backup>']  else "/mnt/wdtvlivehub/Music"

options['fail-on-warning'] = arguments['--fail-on-warning']
options['fix'            ] = arguments['--fix']
options['ignore-errors'  ] = arguments['--ignore-errors']
options['noaction'       ] = arguments['--noaction']
options['verbose'        ] = arguments['--verbose']
options['warning'        ] = not arguments['--quiet']

if music.startswith("/"):
    library = None

if os.path.isfile(music):
    if arguments['--cmp']:
        file1 = createAudioFile(music)
        file2 = createAudioFile(backup)
        file1.isPreferredTo(file2)

    elif arguments['--metadata']:
        file1 = createAudioFile(music)
        file1.reconcile()

    sys.exit(0)

library = Library(library, music)

if arguments['--backup'] or arguments['--cmp'] or arguments['--restore']:
    backup = Library(backup, music)

if arguments['--cmp']:
    library.compare(backup)

elif arguments['--display']:
    library.display()
    sys.exit(0)

sys.exit(0)
