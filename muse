#!/usr/bin/python

"""muse - Muse Audio File Manager

Usage: muse -c|--cmp [[<path1>] <path2>]
       muse -d|--dedup [-n] [<path1>]
       muse -h|--help
       muse -t|--tags [<path1>]
       muse --version

Options:
    -c --cmp       Compare two files or libraries
    -d --dedup     Searches for and removes duplicate files in a libary (default: ~/Music)
    -h --help      Shows this screen
    -n --noaction  For the dedup command; just tells you what it would do
    -t --tags      List the tags of files or libraries
       --version   Shows the version
"""

import filecmp
import os
import sys

sys.path.append(os.path.join(os.path.dirname(os.path.abspath(sys.argv[0])), "lib"))
from docopt       import docopt
from muse.Factory import createAudioFile
from muse.Options import options

options["warning"] = True
arguments = docopt(__doc__, version='1.0')
path1 = arguments['<path1>'] if arguments['<path1>'] else os.path.join(os.path.expanduser("~"), "Music")

if arguments['--cmp']:
    path2 = arguments['<path2>'] if arguments['<path2>'] else "/mnt/wdtvlivehub/Music"
else:
    path2 = None

if arguments['--cmp'] and os.path.isfile(path1):
    file1 = createAudioFile(path1)
    file2 = createAudioFile(path2)
    file1.isPreferredTo(file2)
    sys.exit(0)

if arguments['--tags'] and os.path.isfile(path1):
    file1 = createAudioFile(path1)
    sys.exit(0)
    
if not os.path.exists(path1):
    os.mkdir(path1)
    
if arguments['--cmp'] and not os.path.exists(path2):
    os.mkdir(path2)
  
os.chdir(path1)
allFiles    = {}
filesBySize = {}
remoteFiles = {}
localFiles  = {}
missingRoot = None;

for dirPath, subDirs, files in os.walk("."):
    relPath = dirPath[1:]
    
    if path2 and not os.path.isdir(path2 + relPath):
        if relPath.endswith("/.mediaartlocal"):
            continue
            
        if missingRoot == None or not relPath.startswith(missingRoot):
            print path2 + " does not contain directory " + relPath
            missingRoot = relPath
    else:
        missingRoot = None
        
    for file in files:
        filePath  = dirPath + "/" + file
        audioFile = createAudioFile(filePath)
        
        if not audioFile:
            continue
            
        key = file.lower()

        if key in allFiles:
            otherFile = allFiles[key]
            audioFile.isPreferredTo(otherFile)
        else:
            allFiles[key] = audioFile
        
        if path2 and not os.path.isfile(path2 + relPath + "/" + file):
            if not missingRoot:
                print path2 + relPath + " does not contain file " + file
                
sys.exit(0)
